stages:
  - build
  - push
  - deploy

build_image:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - cd services/backend
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build -f Dockerfile -t $CI_REGISTRY_IMAGE .
    - docker push $CI_REGISTRY_IMAGE
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

push_to_dockerhub:
  stage: push
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - cd services/backend
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE

    - docker login --username=$DOCKER_USER --password=$DOCKER_PW docker.io
    - docker tag $CI_REGISTRY_IMAGE index.docker.io/group5se4ai22/repo_backend_group5se4ai22:latest
    - docker push group5se4ai22/repo_backend_group5se4ai22:latest
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

deploy-backend:      
  stage: deploy
  script:
    - cd services/backend
    - kubectl config set clusters.k8s.certificate-authority-data $K8S_CERTIFICATE 
    - kubectl config set clusters.k8s.server $K8S_SERVER
    - kubectl config set users.ci-user.token $K8S_TOKEN
    - kubectl config set-context ci-k8s --cluster=k8s --user=ci-user --namespace=group5
    - kubectl config use-context ci-k8s
    - kubectl apply -f backend.yaml