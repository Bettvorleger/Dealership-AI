stages:
  - build
  - deploy

build-backend:
  stage: build
  before_script:
    - apt-get update
    - apt-get -y install sudo
    - sudo apt -y install apt-transport-https ca-certificates curl gnupg2 software-properties-common
    - curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    - echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list
    - apt-get update
    - apt-get install docker-ce docker-ce-cli containerd.io
    - docker â€“version
    - sudo systemctl status docker
  script:
    - echo "$DOCKER_PW" | docker login --username $DOCKER_USER --password-stdin docker.io
    - cd services/backend
    - docker build -t index.docker.io/group5se4ai22/repo_backend_group5se4ai22 .
    - docker push index.docker.io/group5se4ai22/repo_backend_group5se4ai22

deploy-backend:      
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: ['']
  script:
    - cd services/backend
    - kubectl config set clusters.k8s.certificate-authority-data $K8S_CERTIFICATE 
    - kubectl config set clusters.k8s.server $K8S_SERVER
    - kubectl config set users.ci-user.token $K8S_TOKEN
    - kubectl config set-context ci-k8s --cluster=k8s --user=ci-user --namespace=group5
    - kubectl config use-context ci-k8s
    - kubectl apply -f backend.yaml